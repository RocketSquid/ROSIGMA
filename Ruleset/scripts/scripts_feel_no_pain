extended:
  tags:
    RuleSoldierBonus:
      BONUS_FEEL_NO_PAIN: int
    BattleUnit: 
      FEEL_NO_PAIN_REDUCTION: int #Percentage of incoming damage that can be reduced by feel no pain
      FEEL_NO_PAIN_MIN: int #Percentage of feel no pain damage reduction that the unit always has
      FEEL_NO_PAIN_TALLY: int #Total damage that has been prevented by feel no pain, minus the amount that has been healed.
    RuleItem:
      ITEM_BLESS_FEEL_NO_PAIN: int #Item feel no pain based on user's bravery
      ITEM_PAINKILLER_STRENGTH: int #Medikit grants feel no pain when administering painkillers
      ITEM_PAINKILLER_MAX_STRENGTH: int #Maximum feel no pain given by a specific medikit, regardless of how many painkillers you administer
    RuleArmor:
      ARMOR_FEEL_NO_PAIN_MIN: int #Minimum feel no pain from armor

  scripts:
    damageUnit:
      - new: ROSIGMA_dU_feel_no_pain
        offset: 1
        code: |
          var int temp;
          var int feelNoPain;
          var int maxHealth;
          unit.getTag feelNoPain Tag.FEEL_NO_PAIN_REDUCTION;
          unit.getHealthMax maxHealth;
          if gt feelNoPain 0; #Unit has no feel no pain reduction
            return;
          end;
          if ge to_health maxHealth; #Damage greater than max health completely ignores feel no pain
            return;
          end;
          set temp to_health;
          muldiv temp feelNoPain 100;
          sub to_health temp;
          div temp 5;
          add to_wound temp;
          return;
      healUnit:
        - new: ROSIGMA_healU_painkiller
          offset: 1
          code: |
            var int temp;
            var int feelNoPain;
            var int painkillerStrength;
            var int painkillerMax;
            var int feelNoPainTally;
            target.getTag feelNoPain Tag.FEEL_NO_PAIN_REDUCTION;
            target.getTag feelNoPainTally Tag.FEEL_NO_PAIN_TALLY;
            if gt feelNoPain painkillerMax; #If target has feel no pain from another source which is higher than what the medikit can do, do nothing
              return;
            end;
            if eq medikit_action_type medikit_action_painkiller; #Only the painkiller grants feel no pain
              item.getTag painkillerStrength Tag.ITEM_PAINKILLER_STRENGTH;
              item.getTag painkillerMax Tag.ITEM_PAINKILLER_MAX_STRENGTH;
              add feelNoPain painkillerStrength;
              if gt feelNoPain painkillerMax; #Avoids overflow
                set feelNoPain painkillerMax;
              end;
              target.setTag Tag.FEEL_NO_PAIN_REDUCTION feelNoPain;
            end;
            if eq medikit_action_type medikit_action_heal;
              sub feelNoPainTally health_recovery;
              if lt feelNoPainTally 0;
                set feelNoPainTally 0;
              end;
              target.setTag Tag.FEEL_NO_PAIN_TALLY feelNoPainTally;
            return;
      - new: ROSIGMA_healU_remove_accumulated
        offset: 20
        code: |
          var int temp;

          target.getTag temp Tag.FEEL_NO_PAIN_TALLY;
          sub temp health_recovery;
          target.setTag Tag.FEEL_NO_PAIN_TALLY temp;
          return;
      newTurnUnit: 
        - new: ROSIGMA_nTU_feel_no_pain:
          offset: 1
          code: |
           var int unitFaction;
           var int feelNoPain;
           var int feelNoPainMin;
           var int temp;
           var int feelNoPainTally;
           unit.getFaction unitFaction;
           unit.getRuleArmor unitArmor;
           if eq side unitFaction; # don't decrement on enemy turn
             unit.getTag feelNoPain Tag.FEEL_NO_PAIN_REDUCTION;
             unit.getTag feelNoPainMin Tag.FEEL_NO_PAIN_MIN;

             
             sub feelNoPain 10;
             if lt feelNoPain feelNoPainMin;
               set feelNoPain feelNoPainMin;
             end;
             unit.setTag Tag.FEEL_NO_PAIN_REDUCTION feelNoPain;
             if 
           end;
      
           return;
      createUnit:
        - new: ROSIGMA_crUnit_feel_no_pain_armor
          offset: 10
          code: |
            var int temp;
            var int temp2;
            var ptr RuleArmor unitArmor;
            unit.getRuleArmor unitArmor;
            unitArmor.getTag temp Tag.ARMOR_FEEL_NO_PAIN_MIN;
            unit.getTag temp2 Tag.FEEL_NO_PAIN_MIN;
            add temp2 temp;
            unit.setTag Tag.FEEL_NO_PAIN_MIN temp2;
            
            unit.getTag temp2 Tag.FEEL_NO_PAIN;
            add temp2 temp;
            unit.setTag Tag.FEEL_NO_PAIN temp2;
            unit.setTag Tag.FEEL_NO_PAIN_TALLY 0;
      applySoldierBonuses:
        - new: ROSIGMA_aSB_bionics_feel_no_pain
          offset: 10
          code: |
            var int temp;
            var int temp2;
            unit.getTag temp2 Tag.FEEL_NO_PAIN_MIN;
            soldier_bonus.getTag temp Tag.BONUS_FEEL_NO_PAIN;
            add temp2 temp;
            unit.setTag Tag.FEEL_NO_PAIN_MIN temp2;
            
            unit.getTag temp2 Tag.FEEL_NO_PAIN;
            add temp2 temp;
            unit.setTag Tag.FEEL_NO_PAIN temp2;

            return;
      returnFromMissionUnit: 

        - new: ROSIGMA_rFMU_accumulated_damage
          offset: 10
          code: |
            var int accumulatedDamage;
            var int temp;
            unit.getTag accumulatedDamage Tag.FEEL_NO_PAIN_TALLY;
          # debug_log "recovery_time old" recovery_time;

            unit.getHealthMax temp;
            mul temp 2;
            
            add recovery_time accumulatedDamage;
            if ge accumulatedDamage temp;
              mul temp -1;
              unit.addHealthWithOverkill temp;
            end;
            return;
      recolorUnitSprite:
        - new: ROSIGMA_rUS_feelNoPain
          offset: 22 # change unit color to red to indicate accumulated wounds are fatal
          code: |
            var int accumulatedDamage;
            var int temp;
            unit.getTag accumulatedDamage Tag.FEEL_NO_PAIN_TALLY;

            unit.getHealthMax temp;
            mul temp 2;
            
            if ge accumulatedDamage temp;
              set_color new_pixel COLOR_X1_RED0;
            end;

            return new_pixel;
items:
  - type: STR_GUARD_MEDI_KIT
    tags:
      ITEM_PAINKILLER_STRENGTH: 10
      ITEM_PAINKILLER_MAX_STRENGTH: 50
  - type: AUX_MEDICAE_MEDI_KIT
    tags:
      ITEM_PAINKILLER_STRENGTH: 10
      ITEM_PAINKILLER_MAX_STRENGTH: 50
  - type: AUX_MEDI_KIT #Space marine version
    tags:
      ITEM_PAINKILLER_STRENGTH: 10
      ITEM_PAINKILLER_MAX_STRENGTH: 60
  - type: STR_INQ_MEDI_KIT #Inquisition version
    tags:
      ITEM_PAINKILLER_STRENGTH: 10
      ITEM_PAINKILLER_MAX_STRENGTH: 50
  - type: AUX_ADEPTAS_MEDI_KIT #Hospitaller
    tags:
      ITEM_PAINKILLER_STRENGTH: 10
      ITEM_PAINKILLER_MAX_STRENGTH: 50
  - type: AUX_SERVITOR_KIT #Support servitor
    tags:
      ITEM_PAINKILLER_STRENGTH: 10
      ITEM_PAINKILLER_MAX_STRENGTH: 50
  - type: AUX_MEDI_KIT_MC #Grey Knights Version
    tags:
      ITEM_PAINKILLER_STRENGTH: 15
      ITEM_PAINKILLER_MAX_STRENGTH: 70

